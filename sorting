//BUBBLE SORT IN O(N2)
//OPTIMIZED BUBBLE SORT - O(N2) WORST CASE AND O(N) BEST CASE


#include <bits/stdc++.h>
using namespace std;
void bubble_sort(vector <int> &A, int n){
      for(int i=0;i<=n-1;i++) {
          for(int j=0;j<=n-i-1;j++){
              if(A[j]>A[j+1]){
                  swap(A[j],A[j+1]);
              }
          }
      }
    }
vector <int> optimizedbubble_sort(vector <int> &A){
    int n=A.size();
    bool swapped;
    for(int i=0;i<=n-1;i++){
         swapped=false;
         for(int j=0;j<=n-i-1;j++){
             if(A[j]>A[j+1]){
                 swap(A[j],A[j+1]);
                 swapped=true;
             }
         }
         if(swapped==false){
             break;
         }
    }
    return A;
}
int main() {
	// your code goes here
    vector <int> A1={0,-3,-3,-1};
    vector <int> A2={1,-2,3,4,4,-2};
    int n1=A1.size();
    int n2=A2.size();
    bubble_sort(A1,n1);
    bubble_sort(A2,n2);
    for(int x:A1){
        cout<<x<<" ";
    }
    cout<<endl;
    for(int x:A2){
        cout<<x<<" ";
    }
    optimizedbubble_sort(A1);
    optimizedbubble_sort(A2);
    for(int x:A1){
        cout<<x<<" ";
    }
    cout<<endl;
    for(int x:A2){
        cout<<x<<" ";
    }
 
	return 0;
}

******************************************************************************************************************************************************************************
//count sort-O(N+range)

#include <bits/stdc++.h>
using namespace std;
void countsort(int a[], int n)
{
    int largest_ele = -1;
    for (int i = 0; i < n; i++)
    {
        largest_ele = max(a[i], largest_ele);
    }
    vector<int> count(largest_ele + 1, 0);
    for (int i = 0; i < n; i++)
    {
        count[a[i]]++;
    }
    int j = 0;
    for (int i = 0; i < largest_ele + 1; i++)
    {
        while (count[i] > 0)
        {
            a[j] = i;
            count[i]--;
            j++;
        }
    }
}
int main()
{
    int a[] = {1, 6, 1, 8, 5, 4};
    int n = sizeof(a) / sizeof(int);
    countsort(a, n);
    for (int i = 0; i < n; i++)
    {
        cout << a[i] << " ";
    }

    return 0;
}
****************************************************************************************************************************************************************************
//sorting with comparator

#include<bits/stdc++.h>
using namespace std;

int compare(int a, int b){
    return a>b;
}
vector<int> sortingWithComparator(vector<int> a, bool flag){
    // your code  goes here
    int n=a.size();
    if(flag){ 
        sort(a.begin(),a.end());
        
    }
    else{
        sort(a.begin(),a.end(),compare);
    }
    return a;
    
}
****************************************************************************************************************************************************************************
